{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVersion",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x12643e93a823ee6927a7937e7f092134e4fda0f412335f2449f6d544e639d027",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "953562",
    "logsBloom": "0x
    "blockHash": "0xfdc0d2e261f7d4f301fe648cad126188e1b00052045870e6cb38562a1c4c9e62",
    "transactionHash": "0x12643e93a823ee6927a7937e7f092134e4fda0f412335f2449f6d544e639d027",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "953562",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "37d9fcc57bd4cf6dd7388e3e458ea4af",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.8;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\nimport \\\"./PriceConverter.sol\\\";\\r\\n\\r\\nerror NotOwner();\\r\\n\\r\\ncontract FundMe {\\r\\n    using PriceConverter for uint256;\\r\\n\\r\\n    mapping(address => uint256) public addressToAmountFunded;\\r\\n    address[] public funders;\\r\\n\\r\\n    // Could we make this constant?  /* hint: no! We should make it immutable! */\\r\\n    address public /* immutable */ i_owner;\\r\\n    uint256 public constant MINIMUM_USD = 50 * 10 ** 18;\\r\\n\\r\\n    AggregatorV3Interface public priceFeed;\\r\\n\\r\\n    constructor(address priceFeedAddress) {\\r\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\r\\n        i_owner = msg.sender;\\r\\n    }\\r\\n\\r\\n    function fund() public payable {\\r\\n        require(msg.value.getConversionRate(priceFeed) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\r\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\r\\n        addressToAmountFunded[msg.sender] += msg.value;\\r\\n        funders.push(msg.sender);\\r\\n    }\\r\\n\\r\\n    function getVersion() public view returns (uint256){\\r\\n        // ETH/USD price feed address of Goerli Network.\\r\\n        return priceFeed.version();\\r\\n    }\\r\\n\\r\\n    modifier onlyOwner {\\r\\n        // require(msg.sender == owner);\\r\\n        if (msg.sender != i_owner) revert NotOwner();\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    function withdraw() public onlyOwner {\\r\\n        for (uint256 funderIndex=0; funderIndex < funders.length; funderIndex++){\\r\\n            address funder = funders[funderIndex];\\r\\n            addressToAmountFunded[funder] = 0;\\r\\n        }\\r\\n        funders = new address[](0);\\r\\n        // // transfer\\r\\n        // payable(msg.sender).transfer(address(this).balance);\\r\\n        // // send\\r\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\r\\n        // require(sendSuccess, \\\"Send failed\\\");\\r\\n        // call\\r\\n        (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\r\\n        require(callSuccess, \\\"Call failed\\\");\\r\\n    }\\r\\n    // Explainer from: https://solidity-by-example.org/fallback/\\r\\n    // Ether is sent to contract\\r\\n    //      is msg.data empty?\\r\\n    //          /   \\\\\\r\\n    //         yes  no\\r\\n    //         /     \\\\\\r\\n    //    receive()?  fallback()\\r\\n    //     /   \\\\\\r\\n    //   yes   no\\r\\n    //  /        \\\\\\r\\n    //receive()  fallback()\\r\\n}\\r\\n\\r\\n// Concepts we didn't cover yet (will cover in later sections)\\r\\n// 1. Enum\\r\\n// 2. Events\\r\\n// 3. Try / Catch\\r\\n// 4. Function Selector\\r\\n// 5. abi.encode / decode\\r\\n// 6. Hash with keccak256\\r\\n// 7. Yul / Assembly\\r\\n\\r\\n\\r\\n\",\"keccak256\":\"0x4c6e0d1dffc71c7b178892d9a707ab3457e71e23d04d9dda9438e64cd8bcab42\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.8;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\n// Why is this a library and not abstract?\\r\\n// Why not an interface?\\r\\nlibrary PriceConverter {\\r\\n    // We could make this public, but then we'd have to deploy it\\r\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns (uint256) {\\r\\n        // https://docs.chain.link/docs/ethereum-addresses/\\r\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\r\\n        // ETH/USD rate in 18 digit\\r\\n        return uint256(answer * 10000000000);\\r\\n        // or (Both will do the same thing)\\r\\n        // return uint256(answer * 1e10); // 1* 10 ** 10 == 10000000000\\r\\n    }\\r\\n\\r\\n    // 1000000000\\r\\n    function getConversionRate(uint256 ethAmount, AggregatorV3Interface priceFeed)\\r\\n        internal\\r\\n        view\\r\\n        returns (uint256)\\r\\n    {\\r\\n        uint256 ethPrice = getPrice(priceFeed);\\r\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\r\\n        // or (Both will do the same thing)\\r\\n        // uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18; // 1 * 10 ** 18 == 1000000000000000000\\r\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\r\\n        return ethAmountInUsd;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x3c23604545f1a0a3d83bfdf8900c266f5b71726353e73a90c3493899761adc39\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620010e1380380620010e183398181016040528101906200003791906200012a565b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200015c565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000f282620000c5565b9050919050565b6200010481620000e5565b81146200011057600080fd5b50565b6000815190506200012481620000f9565b92915050565b600060208284031215620001435762000142620000c0565b5b6000620001538482850162000113565b91505092915050565b610f75806200016c6000396000f3fe60806040526004361061007b5760003560e01c8063741bef1a1161004e578063741bef1a1461012a578063b60d428814610155578063dba6335f1461015f578063dc0d3dff1461018a5761007b565b80630d8e6e2c146100805780633ccfd60b146100ab5780633e47d6f3146100c25780636b69a592146100ff575b600080fd5b34801561008c57600080fd5b506100956101c7565b6040516100a29190610836565b60405180910390f35b3480156100b757600080fd5b506100c061026e565b005b3480156100ce57600080fd5b506100e960048036038101906100e491906108b4565b6104b0565b6040516100f69190610836565b60405180910390f35b34801561010b57600080fd5b506101146104c8565b6040516101219190610836565b60405180910390f35b34801561013657600080fd5b5061013f6104d5565b60405161014c9190610940565b60405180910390f35b61015d6104fb565b005b34801561016b57600080fd5b50610174610635565b604051610181919061096a565b60405180910390f35b34801561019657600080fd5b506101b160048036038101906101ac91906109b1565b61065b565b6040516101be919061096a565b60405180910390f35b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b15801561023157600080fd5b505afa158015610245573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061026991906109f3565b905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102f5576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156103a05760006001828154811061031b5761031a610a20565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061039890610a7e565b9150506102f8565b50600067ffffffffffffffff8111156103bc576103bb610ac7565b5b6040519080825280602002602001820160405280156103ea5781602001602082028036833780820191505090505b5060019080519060200190610400929190610776565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161042790610b27565b60006040518083038185875af1925050503d8060008114610464576040519150601f19603f3d011682016040523d82523d6000602084013e610469565b606091505b50509050806104ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104a490610b99565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b188000061053a600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461069a90919063ffffffff16565b101561057b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057290610c05565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105c99190610c25565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001818154811061066b57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806106a6836106d6565b90506000670de0b6b3a764000085836106bf9190610c7b565b6106c99190610d04565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561071f57600080fd5b505afa158015610733573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107579190610dad565b5050509150506402540be4008161076e9190610e28565b915050919050565b8280548282559060005260206000209081019282156107ef579160200282015b828111156107ee5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610796565b5b5090506107fc9190610800565b5090565b5b80821115610819576000816000905550600101610801565b5090565b6000819050919050565b6108308161081d565b82525050565b600060208201905061084b6000830184610827565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061088182610856565b9050919050565b61089181610876565b811461089c57600080fd5b50565b6000813590506108ae81610888565b92915050565b6000602082840312156108ca576108c9610851565b5b60006108d88482850161089f565b91505092915050565b6000819050919050565b60006109066109016108fc84610856565b6108e1565b610856565b9050919050565b6000610918826108eb565b9050919050565b600061092a8261090d565b9050919050565b61093a8161091f565b82525050565b60006020820190506109556000830184610931565b92915050565b61096481610876565b82525050565b600060208201905061097f600083018461095b565b92915050565b61098e8161081d565b811461099957600080fd5b50565b6000813590506109ab81610985565b92915050565b6000602082840312156109c7576109c6610851565b5b60006109d58482850161099c565b91505092915050565b6000815190506109ed81610985565b92915050565b600060208284031215610a0957610a08610851565b5b6000610a17848285016109de565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a898261081d565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610abc57610abb610a4f565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610b11600083610af6565b9150610b1c82610b01565b600082019050919050565b6000610b3282610b04565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610b83600b83610b3c565b9150610b8e82610b4d565b602082019050919050565b60006020820190508181036000830152610bb281610b76565b9050919050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610bef601b83610b3c565b9150610bfa82610bb9565b602082019050919050565b60006020820190508181036000830152610c1e81610be2565b9050919050565b6000610c308261081d565b9150610c3b8361081d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610c7057610c6f610a4f565b5b828201905092915050565b6000610c868261081d565b9150610c918361081d565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610cca57610cc9610a4f565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610d0f8261081d565b9150610d1a8361081d565b925082610d2a57610d29610cd5565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610d5481610d35565b8114610d5f57600080fd5b50565b600081519050610d7181610d4b565b92915050565b6000819050919050565b610d8a81610d77565b8114610d9557600080fd5b50565b600081519050610da781610d81565b92915050565b600080600080600060a08688031215610dc957610dc8610851565b5b6000610dd788828901610d62565b9550506020610de888828901610d98565b9450506040610df9888289016109de565b9350506060610e0a888289016109de565b9250506080610e1b88828901610d62565b9150509295509295909350565b6000610e3382610d77565b9150610e3e83610d77565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610e7d57610e7c610a4f565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610eba57610eb9610a4f565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610ef757610ef6610a4f565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610f3457610f33610a4f565b5b82820290509291505056fea264697066735822122007c7828440899b52a5ffcbe19a4b145970f022315d2380cf866e17c534dc608564736f6c63430008080033",
  "deployedBytecode": "0x60806040526004361061007b5760003560e01c8063741bef1a1161004e578063741bef1a1461012a578063b60d428814610155578063dba6335f1461015f578063dc0d3dff1461018a5761007b565b80630d8e6e2c146100805780633ccfd60b146100ab5780633e47d6f3146100c25780636b69a592146100ff575b600080fd5b34801561008c57600080fd5b506100956101c7565b6040516100a29190610836565b60405180910390f35b3480156100b757600080fd5b506100c061026e565b005b3480156100ce57600080fd5b506100e960048036038101906100e491906108b4565b6104b0565b6040516100f69190610836565b60405180910390f35b34801561010b57600080fd5b506101146104c8565b6040516101219190610836565b60405180910390f35b34801561013657600080fd5b5061013f6104d5565b60405161014c9190610940565b60405180910390f35b61015d6104fb565b005b34801561016b57600080fd5b50610174610635565b604051610181919061096a565b60405180910390f35b34801561019657600080fd5b506101b160048036038101906101ac91906109b1565b61065b565b6040516101be919061096a565b60405180910390f35b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b15801561023157600080fd5b505afa158015610245573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061026991906109f3565b905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102f5576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156103a05760006001828154811061031b5761031a610a20565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061039890610a7e565b9150506102f8565b50600067ffffffffffffffff8111156103bc576103bb610ac7565b5b6040519080825280602002602001820160405280156103ea5781602001602082028036833780820191505090505b5060019080519060200190610400929190610776565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161042790610b27565b60006040518083038185875af1925050503d8060008114610464576040519150601f19603f3d011682016040523d82523d6000602084013e610469565b606091505b50509050806104ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104a490610b99565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b188000061053a600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461069a90919063ffffffff16565b101561057b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057290610c05565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105c99190610c25565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001818154811061066b57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806106a6836106d6565b90506000670de0b6b3a764000085836106bf9190610c7b565b6106c99190610d04565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561071f57600080fd5b505afa158015610733573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107579190610dad565b5050509150506402540be4008161076e9190610e28565b915050919050565b8280548282559060005260206000209081019282156107ef579160200282015b828111156107ee5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610796565b5b5090506107fc9190610800565b5090565b5b80821115610819576000816000905550600101610801565b5090565b6000819050919050565b6108308161081d565b82525050565b600060208201905061084b6000830184610827565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061088182610856565b9050919050565b61089181610876565b811461089c57600080fd5b50565b6000813590506108ae81610888565b92915050565b6000602082840312156108ca576108c9610851565b5b60006108d88482850161089f565b91505092915050565b6000819050919050565b60006109066109016108fc84610856565b6108e1565b610856565b9050919050565b6000610918826108eb565b9050919050565b600061092a8261090d565b9050919050565b61093a8161091f565b82525050565b60006020820190506109556000830184610931565b92915050565b61096481610876565b82525050565b600060208201905061097f600083018461095b565b92915050565b61098e8161081d565b811461099957600080fd5b50565b6000813590506109ab81610985565b92915050565b6000602082840312156109c7576109c6610851565b5b60006109d58482850161099c565b91505092915050565b6000815190506109ed81610985565b92915050565b600060208284031215610a0957610a08610851565b5b6000610a17848285016109de565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a898261081d565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610abc57610abb610a4f565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610b11600083610af6565b9150610b1c82610b01565b600082019050919050565b6000610b3282610b04565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610b83600b83610b3c565b9150610b8e82610b4d565b602082019050919050565b60006020820190508181036000830152610bb281610b76565b9050919050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610bef601b83610b3c565b9150610bfa82610bb9565b602082019050919050565b60006020820190508181036000830152610c1e81610be2565b9050919050565b6000610c308261081d565b9150610c3b8361081d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610c7057610c6f610a4f565b5b828201905092915050565b6000610c868261081d565b9150610c918361081d565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610cca57610cc9610a4f565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610d0f8261081d565b9150610d1a8361081d565b925082610d2a57610d29610cd5565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610d5481610d35565b8114610d5f57600080fd5b50565b600081519050610d7181610d4b565b92915050565b6000819050919050565b610d8a81610d77565b8114610d9557600080fd5b50565b600081519050610da781610d81565b92915050565b600080600080600060a08688031215610dc957610dc8610851565b5b6000610dd788828901610d62565b9550506020610de888828901610d98565b9450506040610df9888289016109de565b9350506060610e0a888289016109de565b9250506080610e1b88828901610d62565b9150509295509295909350565b6000610e3382610d77565b9150610e3e83610d77565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610e7d57610e7c610a4f565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610eba57610eb9610a4f565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610ef757610ef6610a4f565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610f3457610f33610a4f565b5b82820290509291505056fea264697066735822122007c7828440899b52a5ffcbe19a4b145970f022315d2380cf866e17c534dc608564736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 58,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 63,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "i_owner",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 73,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}