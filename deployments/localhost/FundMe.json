{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVersion",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x9888f32ea9ae67e773aa2971761b04a811a0de7a16c3471d9b88c6154c18512e",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "912503",
    "logsBloom": "0x
    "blockHash": "0x716f8d617d0b61f5bf3e680f7e2bdde71a002d8fb1cd076615c91518b2d8d973",
    "transactionHash": "0x9888f32ea9ae67e773aa2971761b04a811a0de7a16c3471d9b88c6154c18512e",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "912503",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "aab82026225475a03a1c302fa9023add",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    mapping(address => uint256) public addressToAmountFunded;\\n    address[] public funders;\\n\\n    // Could we make this constant?  /* hint: no! We should make it immutable! */\\n    address public /* immutable */ i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10 ** 18;\\n\\n    AggregatorV3Interface priceFeed;\\n\\n    constructor(address priceFeedAddress) {\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n        i_owner = msg.sender;\\n    }\\n\\n    function fund() public payable {\\n        require(msg.value.getConversionRate(priceFeed) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        addressToAmountFunded[msg.sender] += msg.value;\\n        funders.push(msg.sender);\\n    }\\n\\n    function getVersion() public view returns (uint256){\\n        // ETH/USD price feed address of Goerli Network.\\n        return priceFeed.version();\\n    }\\n\\n    modifier onlyOwner {\\n        // require(msg.sender == owner);\\n        if (msg.sender != i_owner) revert NotOwner();\\n        _;\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        for (uint256 funderIndex=0; funderIndex < funders.length; funderIndex++){\\n            address funder = funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        funders = new address[](0);\\n        // // transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // // send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed\\\");\\n        // call\\n        (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n    // Explainer from: https://solidity-by-example.org/fallback/\\n    // Ether is sent to contract\\n    //      is msg.data empty?\\n    //          /   \\\\\\n    //         yes  no\\n    //         /     \\\\\\n    //    receive()?  fallback()\\n    //     /   \\\\\\n    //   yes   no\\n    //  /        \\\\\\n    //receive()  fallback()\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n}\\n\\n// Concepts we didn't cover yet (will cover in later sections)\\n// 1. Enum\\n// 2. Events\\n// 3. Try / Catch\\n// 4. Function Selector\\n// 5. abi.encode / decode\\n// 6. Hash with keccak256\\n// 7. Yul / Assembly\\n\\n\\n\",\"keccak256\":\"0x89d96c64f95f3bc480d8a1d6a63fe7968bc759cd5c00c92e2990620f639160e2\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n    // We could make this public, but then we'd have to deploy it\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns (uint256) {\\n        // https://docs.chain.link/docs/ethereum-addresses/\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n        // or (Both will do the same thing)\\n        // return uint256(answer * 1e10); // 1* 10 ** 10 == 10000000000\\n    }\\n\\n    // 1000000000\\n    function getConversionRate(uint256 ethAmount, AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // or (Both will do the same thing)\\n        // uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18; // 1 * 10 ** 18 == 1000000000000000000\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0x4d13a0b9182ddd8efc7820283ba1bc835ba663b81529fc1e2b3535ed2e3d8997\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405162001013380380620010138339818101604052810190610034919061011f565b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061014c565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100ec826100c1565b9050919050565b6100fc816100e1565b811461010757600080fd5b50565b600081519050610119816100f3565b92915050565b600060208284031215610135576101346100bc565b5b60006101438482850161010a565b91505092915050565b610eb7806200015c6000396000f3fe6080604052600436106100745760003560e01c80636b69a5921161004e5780636b69a5921461010c578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b80630d8e6e2c1461008d5780633ccfd60b146100b85780633e47d6f3146100cf57610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102e3565b6040516100af91906107f2565b60405180910390f35b3480156100c457600080fd5b506100cd61038a565b005b3480156100db57600080fd5b506100f660048036038101906100f19190610870565b6105cc565b60405161010391906107f2565b60405180910390f35b34801561011857600080fd5b506101216105e4565b60405161012e91906107f2565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b506101566105f1565b60405161016391906108ac565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e91906108f3565b610617565b6040516101a091906108ac565b60405180910390f35b6802b5e3af16b18800006101e8600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461065690919063ffffffff16565b1015610229576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102209061097d565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461027791906109cc565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b15801561034d57600080fd5b505afa158015610361573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103859190610a37565b905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610411576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156104bc5760006001828154811061043757610436610a64565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806104b490610a93565b915050610414565b50600067ffffffffffffffff8111156104d8576104d7610adc565b5b6040519080825280602002602001820160405280156105065781602001602082028036833780820191505090505b506001908051906020019061051c929190610732565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161054390610b3c565b60006040518083038185875af1925050503d8060008114610580576040519150601f19603f3d011682016040523d82523d6000602084013e610585565b606091505b50509050806105c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c090610b9d565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001818154811061062757600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061066283610692565b90506000670de0b6b3a7640000858361067b9190610bbd565b6106859190610c46565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156106db57600080fd5b505afa1580156106ef573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107139190610cef565b5050509150506402540be4008161072a9190610d6a565b915050919050565b8280548282559060005260206000209081019282156107ab579160200282015b828111156107aa5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610752565b5b5090506107b891906107bc565b5090565b5b808211156107d55760008160009055506001016107bd565b5090565b6000819050919050565b6107ec816107d9565b82525050565b600060208201905061080760008301846107e3565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061083d82610812565b9050919050565b61084d81610832565b811461085857600080fd5b50565b60008135905061086a81610844565b92915050565b6000602082840312156108865761088561080d565b5b60006108948482850161085b565b91505092915050565b6108a681610832565b82525050565b60006020820190506108c1600083018461089d565b92915050565b6108d0816107d9565b81146108db57600080fd5b50565b6000813590506108ed816108c7565b92915050565b6000602082840312156109095761090861080d565b5b6000610917848285016108de565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610967601b83610920565b915061097282610931565b602082019050919050565b600060208201905081810360008301526109968161095a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109d7826107d9565b91506109e2836107d9565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610a1757610a1661099d565b5b828201905092915050565b600081519050610a31816108c7565b92915050565b600060208284031215610a4d57610a4c61080d565b5b6000610a5b84828501610a22565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610a9e826107d9565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610ad157610ad061099d565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610b26600083610b0b565b9150610b3182610b16565b600082019050919050565b6000610b4782610b19565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610b87600b83610920565b9150610b9282610b51565b602082019050919050565b60006020820190508181036000830152610bb681610b7a565b9050919050565b6000610bc8826107d9565b9150610bd3836107d9565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610c0c57610c0b61099d565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610c51826107d9565b9150610c5c836107d9565b925082610c6c57610c6b610c17565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c9681610c77565b8114610ca157600080fd5b50565b600081519050610cb381610c8d565b92915050565b6000819050919050565b610ccc81610cb9565b8114610cd757600080fd5b50565b600081519050610ce981610cc3565b92915050565b600080600080600060a08688031215610d0b57610d0a61080d565b5b6000610d1988828901610ca4565b9550506020610d2a88828901610cda565b9450506040610d3b88828901610a22565b9350506060610d4c88828901610a22565b9250506080610d5d88828901610ca4565b9150509295509295909350565b6000610d7582610cb9565b9150610d8083610cb9565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610dbf57610dbe61099d565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610dfc57610dfb61099d565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610e3957610e3861099d565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610e7657610e7561099d565b5b82820290509291505056fea2646970667358221220d38de718e3f18aab1bb40425a2db58a4bb840809a385db117b2ddd62337113ec64736f6c63430008080033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c80636b69a5921161004e5780636b69a5921461010c578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b80630d8e6e2c1461008d5780633ccfd60b146100b85780633e47d6f3146100cf57610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102e3565b6040516100af91906107f2565b60405180910390f35b3480156100c457600080fd5b506100cd61038a565b005b3480156100db57600080fd5b506100f660048036038101906100f19190610870565b6105cc565b60405161010391906107f2565b60405180910390f35b34801561011857600080fd5b506101216105e4565b60405161012e91906107f2565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b506101566105f1565b60405161016391906108ac565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e91906108f3565b610617565b6040516101a091906108ac565b60405180910390f35b6802b5e3af16b18800006101e8600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461065690919063ffffffff16565b1015610229576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102209061097d565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461027791906109cc565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b15801561034d57600080fd5b505afa158015610361573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103859190610a37565b905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610411576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156104bc5760006001828154811061043757610436610a64565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806104b490610a93565b915050610414565b50600067ffffffffffffffff8111156104d8576104d7610adc565b5b6040519080825280602002602001820160405280156105065781602001602082028036833780820191505090505b506001908051906020019061051c929190610732565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161054390610b3c565b60006040518083038185875af1925050503d8060008114610580576040519150601f19603f3d011682016040523d82523d6000602084013e610585565b606091505b50509050806105c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c090610b9d565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001818154811061062757600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061066283610692565b90506000670de0b6b3a7640000858361067b9190610bbd565b6106859190610c46565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156106db57600080fd5b505afa1580156106ef573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107139190610cef565b5050509150506402540be4008161072a9190610d6a565b915050919050565b8280548282559060005260206000209081019282156107ab579160200282015b828111156107aa5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610752565b5b5090506107b891906107bc565b5090565b5b808211156107d55760008160009055506001016107bd565b5090565b6000819050919050565b6107ec816107d9565b82525050565b600060208201905061080760008301846107e3565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061083d82610812565b9050919050565b61084d81610832565b811461085857600080fd5b50565b60008135905061086a81610844565b92915050565b6000602082840312156108865761088561080d565b5b60006108948482850161085b565b91505092915050565b6108a681610832565b82525050565b60006020820190506108c1600083018461089d565b92915050565b6108d0816107d9565b81146108db57600080fd5b50565b6000813590506108ed816108c7565b92915050565b6000602082840312156109095761090861080d565b5b6000610917848285016108de565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610967601b83610920565b915061097282610931565b602082019050919050565b600060208201905081810360008301526109968161095a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109d7826107d9565b91506109e2836107d9565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610a1757610a1661099d565b5b828201905092915050565b600081519050610a31816108c7565b92915050565b600060208284031215610a4d57610a4c61080d565b5b6000610a5b84828501610a22565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610a9e826107d9565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610ad157610ad061099d565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610b26600083610b0b565b9150610b3182610b16565b600082019050919050565b6000610b4782610b19565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610b87600b83610920565b9150610b9282610b51565b602082019050919050565b60006020820190508181036000830152610bb681610b7a565b9050919050565b6000610bc8826107d9565b9150610bd3836107d9565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610c0c57610c0b61099d565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610c51826107d9565b9150610c5c836107d9565b925082610c6c57610c6b610c17565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c9681610c77565b8114610ca157600080fd5b50565b600081519050610cb381610c8d565b92915050565b6000819050919050565b610ccc81610cb9565b8114610cd757600080fd5b50565b600081519050610ce981610cc3565b92915050565b600080600080600060a08688031215610d0b57610d0a61080d565b5b6000610d1988828901610ca4565b9550506020610d2a88828901610cda565b9450506040610d3b88828901610a22565b9350506060610d4c88828901610a22565b9250506080610d5d88828901610ca4565b9150509295509295909350565b6000610d7582610cb9565b9150610d8083610cb9565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610dbf57610dbe61099d565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610dfc57610dfb61099d565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610e3957610e3861099d565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610e7657610e7561099d565b5b82820290509291505056fea2646970667358221220d38de718e3f18aab1bb40425a2db58a4bb840809a385db117b2ddd62337113ec64736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 58,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 63,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "i_owner",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 73,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}